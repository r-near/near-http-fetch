name: Deploy Contracts to Testnet

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      deploy_fetcher:
        description: 'Deploy HTTP Fetcher contract'
        type: boolean
        default: true
      deploy_weather:
        description: 'Deploy Weather contract'
        type: boolean
        default: true

env:
  CARGO_TERM_COLOR: always

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install near CLI
        run: curl --proto '=https' --tlsv1.2 -LsSf https://github.com/near/near-cli-rs/releases/download/v0.20.0/near-cli-rs-installer.sh | sh

      - name: Install cargo-near CLI
        run: curl --proto '=https' --tlsv1.2 -LsSf https://github.com/near/cargo-near/releases/download/cargo-near-v0.17.0/cargo-near-installer.sh | sh

      - name: Extract private key from fetcher credentials
        if: github.event_name == 'push' || github.event.inputs.deploy_fetcher == 'true'
        id: fetcher_key
        run: |
          PRIVATE_KEY=$(echo '${{ secrets.NEAR_CREDENTIALS_FETCHER }}' | jq -r '.private_key')
          echo "::add-mask::$PRIVATE_KEY"
          echo "key=$PRIVATE_KEY" >> $GITHUB_OUTPUT

      - name: Extract private key from weather credentials
        if: github.event_name == 'push' || github.event.inputs.deploy_weather == 'true'
        id: weather_key
        run: |
          PRIVATE_KEY=$(echo '${{ secrets.NEAR_CREDENTIALS_WEATHER }}' | jq -r '.private_key')
          echo "::add-mask::$PRIVATE_KEY"
          echo "key=$PRIVATE_KEY" >> $GITHUB_OUTPUT

      - name: Deploy HTTP Fetcher contract
        if: github.event_name == 'push' || github.event.inputs.deploy_fetcher == 'true'
        run: |
          cargo near deploy build-non-reproducible-wasm http-fetcher.testnet \
            without-init-call \
            network-config testnet \
            sign-with-plaintext-private-key "${{ steps.fetcher_key.outputs.key }}" \
            send
          echo "Deployed HTTP Fetcher to http-fetcher.testnet"

      - name: Initialize HTTP Fetcher contract
        if: github.event_name == 'push' || github.event.inputs.deploy_fetcher == 'true'
        run: |
          near contract call-function as-transaction http-fetcher.testnet new json-args '{"trusted_relayer": "http-relayer.testnet"}' \
            prepaid-gas '100.0 Tgas' \
            attached-deposit '0 NEAR' \
            sign-as http-fetcher.testnet \
            network-config testnet \
            sign-with-plaintext-private-key "${{ steps.fetcher_key.outputs.key }}" \
            send || echo "Contract already initialized or init failed - continuing"

      - name: Deploy Weather contract
        if: github.event_name == 'push' || github.event.inputs.deploy_weather == 'true'
        working-directory: examples/weather
        run: |
          cargo near deploy build-non-reproducible-wasm weather-example.testnet \
            without-init-call \
            network-config testnet \
            sign-with-plaintext-private-key "${{ steps.weather_key.outputs.key }}" \
            send
          echo "Deployed Weather to weather-example.testnet"

      - name: Initialize Weather contract
        if: github.event_name == 'push' || github.event.inputs.deploy_weather == 'true'
        run: |
          near contract call-function as-transaction weather-example.testnet new json-args '{"fetcher_account": "http-fetcher.testnet"}' \
            prepaid-gas '100.0 Tgas' \
            attached-deposit '0 NEAR' \
            sign-as weather-example.testnet \
            network-config testnet \
            sign-with-plaintext-private-key "${{ steps.weather_key.outputs.key }}" \
            send || echo "Contract already initialized or init failed - continuing"

      - name: Upload HTTP Fetcher WASM artifact
        if: github.event_name == 'push' || github.event.inputs.deploy_fetcher == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: http-fetch-contract
          path: target/near/http_fetch.wasm
          retention-days: 30

      - name: Upload Weather WASM artifact
        if: github.event_name == 'push' || github.event.inputs.deploy_weather == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: weather-contract
          path: examples/weather/target/near/weather.wasm
          retention-days: 30

      - name: Deployment Summary
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### HTTP Fetcher Contract" >> $GITHUB_STEP_SUMMARY
          echo "- **Account**: \`http-fetcher.testnet\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Network**: testnet" >> $GITHUB_STEP_SUMMARY
          echo "- **Explorer**: https://testnet.nearblocks.io/address/http-fetcher.testnet" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Weather Contract" >> $GITHUB_STEP_SUMMARY
          echo "- **Account**: \`weather-example.testnet\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Network**: testnet" >> $GITHUB_STEP_SUMMARY
          echo "- **Explorer**: https://testnet.nearblocks.io/address/weather-example.testnet" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Relayer" >> $GITHUB_STEP_SUMMARY
          echo "- **Account**: \`http-relayer.testnet\`" >> $GITHUB_STEP_SUMMARY
